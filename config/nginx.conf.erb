daemon off;

# Maximize worker processes
worker_processes auto;

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
    # Hide that we use NGINX
    server_tokens off;

    # Disable logging for performance
    access_log  /dev/null;
    error_log /dev/null;

    # Send application using an octet stream
    include mime.types;
    default_type application/octet-stream;

    # Don't block on disk I/O if data is not in memory
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Must read the body in 5 seconds.
    client_body_timeout 5;

    # Load balancer
    upstream app_server {
        server unix:/tmp/nginx.socket fail_timeout=0;
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name _;
        keepalive_timeout 5;

        # Set proxy rules for all pages
        location / {
            if ($http_x_forwarded_proto != "https") {
                return 301 https://$host$request_uri;
            }

            proxy_http_version 1.1;
            proxy_pass https://app_server;
            proxy_redirect off;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), display-capture=(), document-domain=(), document-write=(), encrypted-media=(), execution-while-not-rendered=(), execution-while-out-of-viewport=(), font-display-late-swap=(), fullscreen=(), geolocation=(), gyroscope=(), interest-cohort=(), layout-animations=(), legacy-image-formats=(), loading-frame-default-eager=(), magnetometer=(), microphone=(), midi=(), navigation-override=(), notifications=(), oversized-images=(), payment=(), picture-in-picture=(), publickey-credentials=(), push=(), serial=(), speaker=(), sync-script=(), sync-xhr=(), unoptimized-images=(), unoptimized-lossless-images=(), unoptimized-lossy-images=(), unsized-media=(), usb=(), vertical-scroll=(), vibrate=(), vr=(), wake-lock=(), xr=(), xr-spatial-tracking=()"
            proxy_set_header Host $http_host;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
        }

        location /api {
            if ($http_x_forwarded_proto != "https") {
                return 301 https://$host$request_uri;
            }

            proxy_http_version 1.1;
            proxy_pass https://app_server/api;
            proxy_redirect off;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
        }
    }
}
